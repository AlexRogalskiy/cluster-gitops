---
- name: "Configure OCP"
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - cfg/helicarrier.yml
    - cfg/secrets_helicarrier.yml

  tasks:
    # ---- Bootsrap Hashicorp Vault ----
    - name: Add Hashicorp Helm repo
      command: helm repo add hashicorp https://helm.releases.hashicorp.com

    - name: Create vault namespace
      command: oc apply -f templates/vault-namespace.yaml

    - name: Install Vault to the cluster
      command: helm upgrade --install vault hashicorp/vault --set "global.openshift=true" --set "server.dev.enabled=true" -n vault

    - name: Wait for Vault to become ready
      command: oc wait -n vault --for condition=Ready pod/vault-0

    - name: check current auth methods available
      command: oc exec -n vault vault-0 -- vault auth list
      register: vault_auth_list

    - name: Activate Kubernetes Auth
      command: oc exec -n vault vault-0 -- vault auth enable kubernetes
      when: vault_auth_list.rc == 0 and "kubernetes" not in vault_auth_list.stdout

    - name: get default service account token
      command:  oc exec -n vault vault-0 -- cat /var/run/secrets/kubernetes.io/serviceaccount/token
      register: vault_token

    - name: get kubernetes certificate
      command: oc exec -n vault vault-0 -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      register: vault_certificate

    - name: Add Kubernetes Auth method
      command: oc exec -n vault vault-0 -- vault write auth/kubernetes/config token_reviewer_jwt={{ vault_token.stdout }} kubernetes_host="https://kubernetes.default.svc:443" kubernetes_ca_cert="{{ vault_certificate.stdout }}"

    - name: get current secrets
      command: oc exec -n vault vault-0 -- vault secrets list
      register: vault_secrets_list

    - name: Enable global-secrets store
      command: oc exec -n vault vault-0 -- vault secrets enable -path=global_secrets -version=2 kv
      when: vault_secrets_list.rc == 0 and "global_secrets" not in vault_secrets_list.stdout

    - name: save vault-secrets-operator policy
      set_fact:
        vault_secrets_operator_policy: |
          path "global_secrets/data/*" {
            capabilities = ["read"]
          }

    - name: write vault-secrets-operator to read all global -secrets
      shell: echo '{{ vault_secrets_operator_policy }}' | oc exec -n vault vault-0 -i -- vault policy write vault-secrets-operator -

    - name: add vault-secrets-operator role
      command: oc exec -n vault vault-0 -- vault write auth/kubernetes/role/vault-secrets-operator bound_service_account_names="vault-secrets-operator" bound_service_account_namespaces="vault" policies=vault-secrets-operator ttl=24h

    - name: populate vault with global_secrets
      command: oc exec -n vault vault-0 -- vault kv put global_secrets/{{item.name}} {{item.key}}={{item.value}}
      with_items: "{{ global_secrets }}"
    
    # # ---- Bootsrap ArgoCD operator ----
    # - name: Applies ArgoCD Configuration to the cluster
    #   command: oc apply -Rf "{{ playbook_dir }}"/../argocd/ -l config.janz.cloud/name=argocd-bootstrap
    #   retries: 3
    #   delay: 5
    #   register: result
    #   until: result.rc == 0